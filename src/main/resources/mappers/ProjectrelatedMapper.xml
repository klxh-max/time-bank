<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tb.mapper.ProjectrelatedMapper">
  <resultMap id="BaseResultMap" type="com.tb.entity.Projectrelated">
    <id column="appkey" jdbcType="VARCHAR" property="appkey" />
    <id column="projectId" jdbcType="VARCHAR" property="projectId" />
    <result column="userState" jdbcType="VARCHAR" property="userState" />
    <result column="acceptTime" jdbcType="TIMESTAMP" property="acceptTime" />
    <result column="overTime" jdbcType="TIMESTAMP" property="overTime" />
    <result column="userComment" jdbcType="VARCHAR" property="userComment" />
    <result column="star" jdbcType="INTEGER" property="star" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="userAvatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="reviewState" jdbcType="VARCHAR" property="reviewState" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from projectrelated
    where appkey = #{appkey,jdbcType=VARCHAR}
      and projectId = #{projectId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tb.entity.Projectrelated">
    insert into projectrelated (appkey, projectId, userState, 
      acceptTime, overTime, userComment, 
      star, username, userAvatar, reviewState
      )
    values (#{appkey,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{userState,jdbcType=VARCHAR}, 
      #{acceptTime,jdbcType=TIMESTAMP}, #{overTime,jdbcType=TIMESTAMP}, #{userComment,jdbcType=VARCHAR}, 
      #{star,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userAvatar,jdbcType=VARCHAR}
      ,#{reviewState,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.tb.entity.Projectrelated">
    update projectrelated
    set userState = #{userState,jdbcType=VARCHAR},
      acceptTime = #{acceptTime,jdbcType=TIMESTAMP},
      overTime = #{overTime,jdbcType=TIMESTAMP},
      userComment = #{userComment,jdbcType=VARCHAR},
      star = #{star,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      userAvatar = #{userAvatar,jdbcType=VARCHAR},
      reviewState = #{reviewState,jdbcType=VARCHAR}
    where appkey = #{appkey,jdbcType=VARCHAR}
      and projectId = #{projectId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select appkey, projectId, userState, acceptTime, overTime, userComment, star, username, 
    userAvatar, reviewState
    from projectrelated
    where appkey = #{appkey,jdbcType=VARCHAR}
      and projectId = #{projectId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select appkey, projectId, userState, acceptTime, overTime, userComment, star, username, 
    userAvatar, reviewState
    from projectrelated
  </select>

  <select id="selectByProjectId" resultMap="BaseResultMap">
    select appkey, projectId, userState, acceptTime, overTime, userComment, star, username,
           userAvatar, reviewState
    from projectrelated
    where projectId = #{projectId,jdbcType=VARCHAR}
  </select>

  <select id="queryListByAppkey"  resultMap="BaseResultMap">
    select appkey, projectId, userState, acceptTime, overTime, userComment, star, username,
           userAvatar,reviewState
    from projectrelated
    where appkey = #{appkey,jdbcType=VARCHAR}
  </select>
  <select id="queryListByProjectId"  resultMap="BaseResultMap">
    select appkey, projectId, userState, acceptTime, overTime, userComment, star, username,
           userAvatar,reviewState
    from projectrelated
    where projectId = #{projectId}
  </select>

  <select id="selectAppkeyByProjectIdAndUserState"  parameterType="map" resultMap="BaseResultMap">
    select *
    from projectrelated
    where projectId = #{projectId} and userState = #{userState}
  </select>

  <update id="updateUserState" parameterType="map">
    update projectrelated set userState = #{userState}
    where projectId = #{projectId} and appkey = #{appkey}
  </update>

</mapper>