<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tb.mapper.RemarktodayMapper">
  <resultMap id="BaseResultMap" type="com.tb.entity.Remarktoday">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="projectId" jdbcType="VARCHAR" property="projectId" />
    <result column="projectName" jdbcType="VARCHAR" property="projectName" />
    <result column="ownerId" jdbcType="VARCHAR" property="ownerId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="reviewerlist" jdbcType="VARCHAR" property="reviewerlist" />
    <result column="remarkAgree" jdbcType="INTEGER" property="remarkAgree" />
    <result column="remarkDisagree" jdbcType="INTEGER" property="remarkDisagree" />
    <result column="remarkText" jdbcType="VARCHAR" property="remarkText" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from remarktoday
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tb.entity.Remarktoday">
    insert into remarktoday (id, projectId, projectName,
      ownerId, description, reviewerlist,
      remarkAgree, remarkDisagree, remarkText)
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR},
      #{ownerId,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{reviewerlist,jdbcType=VARCHAR},
      #{remarkAgree,jdbcType=INTEGER}, #{remarkDisagree,jdbcType=INTEGER}, #{remarkText,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.tb.entity.Remarktoday">
    update remarktoday
    set projectId = #{projectId,jdbcType=VARCHAR},
      projectName = #{projectName,jdbcType=VARCHAR},
      ownerId = #{ownerId,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      reviewerlist = #{reviewerlist,jdbcType=VARCHAR},
      remarkAgree = #{remarkAgree,jdbcType=INTEGER},
      remarkDisagree = #{remarkDisagree,jdbcType=INTEGER},
      remarkText = #{remarkText,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, projectId, projectName, ownerId, description, reviewerlist, remarkAgree,
    remarkDisagree, remarkText
    from remarktoday
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, projectId, projectName, ownerId, description, reviewerlist, remarkAgree,
    remarkDisagree, remarkText
    from remarktoday
  </select>

  <select id="selectByProjectId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, projectId, projectName, ownerId, description, reviewerlist, remarkAgree,
           remarkDisagree, remarkText
    from remarktoday
    where projectId = #{projectId,jdbcType=VARCHAR}
  </select>

  <update id="updateAgree" parameterType="java.lang.String">
    update remarktoday set remarkAgree = ((select rt.remarkAgree from
      (SELECT remarkAgree FROM remarktoday WHERE projectId = #{projectId,jdbcType=VARCHAR}) rt)+1)
    where projectId = #{projectId,jdbcType=VARCHAR}
  </update>

  <update id="updateDisagree" parameterType="java.lang.String">
    update remarktoday set remarkDisagree = ((select rt.remarkDisagree from
      (SELECT remarkDisagree FROM remarktoday WHERE projectId = #{projectId,jdbcType=VARCHAR}) rt)+1)
    where projectId = #{projectId,jdbcType=VARCHAR}
  </update>

  <select id="selectReviewerlist" parameterType="java.lang.String" resultType="java.lang.String">
    select reviewerlist from remarktoday where projectId = #{projectId,jdbcType=VARCHAR}
  </select>

  <select id="selectAgree" parameterType="java.lang.String" resultType="java.lang.Integer">
    select remarkAgree from remarktoday where projectId = #{projectId,jdbcType=VARCHAR}
  </select>

  <update id="updateStatus" parameterType="java.lang.String">
    update remarktoday set reviewerlist = #{reviewerlist,jdbcType=VARCHAR}
    where projectId = #{projectId,jdbcType=VARCHAR}
  </update>

</mapper>